export function getTranslation(featureI18n, key) {
    const language = getUserLanguage(); // On récupère la langue de l'utilisateur avec la méthode existante
    // Vérifier si la clé existe dans les traductions de la fonctionnalité
    const translation = featureI18n[key];
    if (!translation) {
        console.warn(`Clé de traduction manquante : ${key}`);
        return key; // Retourner la clé si la traduction est manquante
    }
    // Retourner la traduction dans la langue demandée, ou la version anglaise par défaut
    return translation[language] || translation["en"];
}
export function getUserLanguage() {
    const language = navigator.language.slice(0, 2);
    const supportedLanguages = ["en", "fr", "es", "de", "it"];
    return supportedLanguages.includes(language) ? language : "en";
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaTE4bi11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pMThuL2kxOG4tdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxVQUFVLGNBQWMsQ0FBQyxXQUFnQixFQUFFLEdBQVc7SUFDMUQsTUFBTSxRQUFRLEdBQUcsZUFBZSxFQUFFLENBQUMsQ0FBQyxtRUFBbUU7SUFFdkcsc0VBQXNFO0lBQ3RFLE1BQU0sV0FBVyxHQUFHLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNyQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDakIsT0FBTyxDQUFDLElBQUksQ0FBQyxpQ0FBaUMsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUNyRCxPQUFPLEdBQUcsQ0FBQyxDQUFDLGtEQUFrRDtJQUNoRSxDQUFDO0lBRUQscUZBQXFGO0lBQ3JGLE9BQU8sV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNwRCxDQUFDO0FBRUQsTUFBTSxVQUFVLGVBQWU7SUFDN0IsTUFBTSxRQUFRLEdBQUcsU0FBUyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBYSxDQUFDO0lBQzVELE1BQU0sa0JBQWtCLEdBQWUsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDdEUsT0FBTyxrQkFBa0IsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQ2pFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdHlwZSBMYW5ndWFnZSA9IFwiZW5cIiB8IFwiZnJcIiB8IFwiZXNcIiB8IFwiZGVcIiB8IFwiaXRcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRUcmFuc2xhdGlvbihmZWF0dXJlSTE4bjogYW55LCBrZXk6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgY29uc3QgbGFuZ3VhZ2UgPSBnZXRVc2VyTGFuZ3VhZ2UoKTsgLy8gT24gcsOpY3Vww6hyZSBsYSBsYW5ndWUgZGUgbCd1dGlsaXNhdGV1ciBhdmVjIGxhIG3DqXRob2RlIGV4aXN0YW50ZVxyXG5cclxuICAvLyBWw6lyaWZpZXIgc2kgbGEgY2zDqSBleGlzdGUgZGFucyBsZXMgdHJhZHVjdGlvbnMgZGUgbGEgZm9uY3Rpb25uYWxpdMOpXHJcbiAgY29uc3QgdHJhbnNsYXRpb24gPSBmZWF0dXJlSTE4bltrZXldO1xyXG4gIGlmICghdHJhbnNsYXRpb24pIHtcclxuICAgIGNvbnNvbGUud2FybihgQ2zDqSBkZSB0cmFkdWN0aW9uIG1hbnF1YW50ZSA6ICR7a2V5fWApO1xyXG4gICAgcmV0dXJuIGtleTsgLy8gUmV0b3VybmVyIGxhIGNsw6kgc2kgbGEgdHJhZHVjdGlvbiBlc3QgbWFucXVhbnRlXHJcbiAgfVxyXG5cclxuICAvLyBSZXRvdXJuZXIgbGEgdHJhZHVjdGlvbiBkYW5zIGxhIGxhbmd1ZSBkZW1hbmTDqWUsIG91IGxhIHZlcnNpb24gYW5nbGFpc2UgcGFyIGTDqWZhdXRcclxuICByZXR1cm4gdHJhbnNsYXRpb25bbGFuZ3VhZ2VdIHx8IHRyYW5zbGF0aW9uW1wiZW5cIl07XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRVc2VyTGFuZ3VhZ2UoKTogTGFuZ3VhZ2Uge1xyXG4gIGNvbnN0IGxhbmd1YWdlID0gbmF2aWdhdG9yLmxhbmd1YWdlLnNsaWNlKDAsIDIpIGFzIExhbmd1YWdlO1xyXG4gIGNvbnN0IHN1cHBvcnRlZExhbmd1YWdlczogTGFuZ3VhZ2VbXSA9IFtcImVuXCIsIFwiZnJcIiwgXCJlc1wiLCBcImRlXCIsIFwiaXRcIl07XHJcbiAgcmV0dXJuIHN1cHBvcnRlZExhbmd1YWdlcy5pbmNsdWRlcyhsYW5ndWFnZSkgPyBsYW5ndWFnZSA6IFwiZW5cIjtcclxufSJdfQ==