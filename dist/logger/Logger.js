export class Logger {
    static log(level, message) {
        if (level >= Logger.currentLevel) {
            const levelName = Object.keys(Logger.levels)
                .find(key => Logger.levels[key] === level);
            console.log(`[${levelName}] ${message}`);
        }
    }
    static debug(message) {
        Logger.log(Logger.levels.DEBUG, message);
    }
    static info(message) {
        Logger.log(Logger.levels.INFO, message);
    }
    static warn(message) {
        Logger.log(Logger.levels.WARN, message);
    }
    static error(message) {
        Logger.log(Logger.levels.ERROR, message);
    }
    static setLevel(level) {
        if (Object.values(Logger.levels).includes(level)) {
            Logger.currentLevel = level;
        }
        else {
            console.warn(`Invalid log level: ${level}`);
        }
    }
}
Logger.levels = { DEBUG: 0, INFO: 1, WARN: 2, ERROR: 3 };
Logger.currentLevel = Logger.levels.DEBUG;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9nZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xvZ2dlci9Mb2dnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxPQUFPLE1BQU07SUFLZixNQUFNLENBQUMsR0FBRyxDQUFDLEtBQWEsRUFBRSxPQUFlO1FBQ3JDLElBQUksS0FBSyxJQUFJLE1BQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUMvQixNQUFNLFNBQVMsR0FBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQW9DO2lCQUMzRSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDO1lBQy9DLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxTQUFTLEtBQUssT0FBTyxFQUFFLENBQUMsQ0FBQztRQUM3QyxDQUFDO0lBQ0wsQ0FBQztJQUVELE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBZTtRQUN4QixNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRCxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQWU7UUFDdkIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFlO1FBQ3ZCLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUVELE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBZTtRQUN4QixNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRCxNQUFNLENBQUMsUUFBUSxDQUFDLEtBQXlEO1FBQ3JFLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDL0MsTUFBTSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7UUFDaEMsQ0FBQzthQUFNLENBQUM7WUFDSixPQUFPLENBQUMsSUFBSSxDQUFDLHNCQUFzQixLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQ2hELENBQUM7SUFDTCxDQUFDOztBQWxDTSxhQUFNLEdBQUcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFXLENBQUM7QUFDM0QsbUJBQVksR0FBdUQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgTG9nZ2VyIHtcclxuICAgIHN0YXRpYyBsZXZlbHMgPSB7IERFQlVHOiAwLCBJTkZPOiAxLCBXQVJOOiAyLCBFUlJPUjogMyB9IGFzIGNvbnN0O1xyXG4gICAgc3RhdGljIGN1cnJlbnRMZXZlbDogKHR5cGVvZiBMb2dnZXIubGV2ZWxzKVtrZXlvZiB0eXBlb2YgTG9nZ2VyLmxldmVsc10gPSBMb2dnZXIubGV2ZWxzLkRFQlVHO1xyXG5cclxuXHJcbiAgICBzdGF0aWMgbG9nKGxldmVsOiBudW1iZXIsIG1lc3NhZ2U6IHN0cmluZykge1xyXG4gICAgICAgIGlmIChsZXZlbCA+PSBMb2dnZXIuY3VycmVudExldmVsKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGxldmVsTmFtZSA9IChPYmplY3Qua2V5cyhMb2dnZXIubGV2ZWxzKSBhcyAoa2V5b2YgdHlwZW9mIExvZ2dlci5sZXZlbHMpW10pXHJcbiAgICAgICAgICAgICAgICAuZmluZChrZXkgPT4gTG9nZ2VyLmxldmVsc1trZXldID09PSBsZXZlbCk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBbJHtsZXZlbE5hbWV9XSAke21lc3NhZ2V9YCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBkZWJ1ZyhtZXNzYWdlOiBzdHJpbmcpIHtcclxuICAgICAgICBMb2dnZXIubG9nKExvZ2dlci5sZXZlbHMuREVCVUcsIG1lc3NhZ2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBpbmZvKG1lc3NhZ2U6IHN0cmluZykge1xyXG4gICAgICAgIExvZ2dlci5sb2coTG9nZ2VyLmxldmVscy5JTkZPLCBtZXNzYWdlKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgd2FybihtZXNzYWdlOiBzdHJpbmcpIHtcclxuICAgICAgICBMb2dnZXIubG9nKExvZ2dlci5sZXZlbHMuV0FSTiwgbWVzc2FnZSk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGVycm9yKG1lc3NhZ2U6IHN0cmluZykge1xyXG4gICAgICAgIExvZ2dlci5sb2coTG9nZ2VyLmxldmVscy5FUlJPUiwgbWVzc2FnZSk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHNldExldmVsKGxldmVsOiAodHlwZW9mIExvZ2dlci5sZXZlbHMpW2tleW9mIHR5cGVvZiBMb2dnZXIubGV2ZWxzXSkge1xyXG4gICAgICAgIGlmIChPYmplY3QudmFsdWVzKExvZ2dlci5sZXZlbHMpLmluY2x1ZGVzKGxldmVsKSkge1xyXG4gICAgICAgICAgICBMb2dnZXIuY3VycmVudExldmVsID0gbGV2ZWw7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc29sZS53YXJuKGBJbnZhbGlkIGxvZyBsZXZlbDogJHtsZXZlbH1gKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG4iXX0=